# 한 줄 주석 (ctrl+/)

'''
여기는
여러줄
주석입니다.
'''

"""
쌍따옴표 세 개도
여러줄
주석입니다.
"""

print("Hello World")
print("Hello","World")#자동으로 두 단어 사이에 공백이 생김.
print("Hello","World",sep="") #seperate를 없앰.
print("010","2134","4567",sep="-") #seperate에 다른 단어를 넣음.

print("Hello","Python",1,2,sep="_") #자료형이 달라도 됨(파이썬만)
print() #괄호 안에 아무것도 없으면 줄바꿈 역할이 됨.
print(11111) #문자열의 경우 "1111"을 넣어야하지만 숫자라서 그냥 1111넣음.

print("안녕하세요, ", end="") #문장끝의 후미어를 지정할수있다.
print("코딩온입니다.")
print("안녕하세요", end=", ") #문장끝의 후미어를 지정할수있다.
print("코딩온입니다.")

ive='I AM'
print(ive)
ive='장원영'
print(ive)

print(f"제가 좋아하는 가수는 {ive}입니다.") #f문자열포매팅, python 3.6버전부터 가능
print("제가 좋아하는 가수는 ", ive, "입니다.",sep="") #f문자열포매팅이 없던 시절 코딩법. sep를 사용하지 않으면 띄어쓰기가 달라진다.

#문자열 : "문자열", '문자열' 쌍따옴표와 따옴표는 같은 역할을 한다.
#type(문자) : 문자의 타입을 알수있다.
print(type(1))
print(type(1.2))
print(type("1"))

#이스케이프 문자 : \ (역슬래시), 원래 역할에서 벗어나게 해준다.
print("what\'s your name?") # (\') 를 하지 않았다면 문법오류로 코드가 작동되지 않았다.
print("V\\S")

print("1111\n2222")#\n은 줄바꿈의 역할
print("111\t1111")#\t는 탭(띄어쓰기 8칸정도)

print("|\\_/|\n|q p|\t/}\n(ㅁ )\"\"\"\\\n|\"^\"`  \t|\n||_/=\\\\_|")

print(0b1100)#0b 로 시작하면 2진수
print(0x1f)#0x 로 시작하면 16진수 10 = 16, f=15 => 10+16=31 따라서 31이 출력된다.
print(bin(10)) #bin : 10진수를 2진수로
print(hex(16)) #hex : 10진수를 16진수로
print(type(bin(10))) #bin : 문자열로 출력된다.
print(type(hex(16))) #hex : 문자열로 출력된다. 따라서 bin과 hex로 출력한건 연산계산 안됨.

"""
// : 정수나누기 연산자 (정수부분만 출력, 소숫점 버림.)
% : 나머지 연산자 (나머지를 출력, 홀짝구분할때 좋음.)
** : 제곱 연산자 (어떤 수를 여러번 곱하는 연산)
"""
print(3//2) #3나누기2의 몫은 1이므로 소숫점을 버린 1만 출력
print(3.25%7) #3.25 나누기7은 몫이0 나머지가 3.25이므로 나머지인 3.25가 출력

print(ord("0")) #ord() : 주어진 문자를 해당하는 유니코드 정수값으로 변환
print(ord("A"))
print(chr(48)) #chr() : 주어진 유니코드 정수값을 문자로 변환
print(chr(65))

