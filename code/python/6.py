#튜플
"""
-리스트와 비슷하지만 ()를 사용하여 구분
-불변성(immutable) : 튜플에 저장된 값은 수정,추가,삭제 불가.
-불변 객체 : 한번 생성된 객체의 상태를 변경할 수 없다.
"""
t1=(1,) #요소가 1개뿐인 튜플은 반드시 쉼표 사용!
print(t1)
not_t1=(1)
print(not_t1) #쉼표가 없는 튜플은 그냥 정수일 뿐이다.

t2=(1,2,3,4,5,6,3,3,3,2,2) #소괄호를 사용해 튜플을 선언
print(t2)
t3=1,2,3 #괄호 없이 쉼표만 사용해도 튜플 선언 가능
print(t3)
t4=("a","b","c","d",("감자","안녕")) #문자/문자열 가능, 튜플 안에 튜플 가능.
print(t4)

print(t1[0]) #0번 인덱스 요소 불러오기
print(t2.count(3)) # 요소 3의 갯수 카운팅
print(t3.index(2)) # 숫자 2의 인덱스 순서값
print(t4[4][0])
print("a" in t4) #튜플 안에 요소가 있는지 체크
print("e" in t4)
"""
t4[0]="x" #튜플은 수정,삭제,추가가 안된다.
"""

#셋(Set)
"""
-순서가 없음.
-요소 중복값은 제거하여 한 번만 나옴.
-요소를 추가,삭제는 가능하지만, 순서가 없어서 인덱싱은 불가.
"""
s1={1,2,3,3,4,4,4} #{중괄호}로 선언가능
print(s1) #{1,2,3,4} #중복값 한번만 나옴.
s2=set((1,2,3,4,5,6,6)) # set(())으로 선언가능
print(s2)
s3=set(["가","나","다","다","라","나"])
print(s3) #순서없이 랜덤으로 출력됨

s1.add(5) #원소추가
print(s1)
s1.update([6,7,8,9,10]) #다른 set, list,tuple의 요소들을 현재 집합에 추가하는 기능
print(s1)
s1.remove(3) #remove:존재하지 않는 요소를 삭제시도하면 오류가 발생함.
print(s1)
s1.discard(9) #discard:존재하지 않는 요소를 삭제시도해도 오류가 발생하지 않음.
print(s1)
s1.clear()
print(s1) #set() : 빈 집합을 표시함

#set연산
s1={1,2,3,4,5}
s2={4,5,6,7,8}
#s1과 s2를 합집합
print(s1.union(s2))
print(s1|s2)
#s1과 s2를 교집합
print(s1&s2)
print(s1.intersection(s2))
#s1과 s2를 차집합
print(s1-s2)
print(s1.difference(s2))
print(s2-s1) #순서가 바뀌면 출력도 바뀐다.
